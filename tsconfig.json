{
  "compilerOptions": {
    // 设置目标编译版本为 ESNext（或其他你需要的版本）
    "target": "esnext",

    // 设置模块系统为 ESNext
    "module": "esnext",

    // 启用严格模式，提供更强大的类型检查
    "strict": true,

    // 在 JSX 文件中保留 JSX 以供 Babel 处理
    "jsx": "preserve",

    // 模块解析策略，使用 Node.js 的解析规则
    "moduleResolution": "node",

    // 启用装饰器语法的实验性支持
    "experimentalDecorators": true,

    // 允许在 JavaScript 文件中使用 TypeScript 的类型检查
    "allowJs": true,

    // 跳过对声明文件的检查
    "skipLibCheck": true,

    // 允许默认导入的对象可以使用 default 关键字
    "esModuleInterop": true,

    // 允许从没有默认导出的模块中默认导入
    "allowSyntheticDefaultImports": true,

    // 强制所有导入名称保持一致的大小写
    "forceConsistentCasingInFileNames": true,

    // 在类的定义中使用 'define' 关键字
    "useDefineForClassFields": true,

    // 生成源映射文件
    "sourceMap": true,

    // 设置根目录为当前目录
    "baseUrl": ".",

    // 引入 webpack 环境类型声明
    "types": [
      "webpack-env"
    ],

    // 别名配置，将 "@/" 映射到 "src/"
    "paths": {
      "@/*": [
        "src/*"
      ]
    },

    // 需要引入的库
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },

  // 需要编译的文件路径
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],

  // 不需要编译的文件路径
  "exclude": [
    "node_modules"
  ]
}